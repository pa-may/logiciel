{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\logiciel\\\\src\\\\page\\\\jobsearch\\\\jobsearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { results as data } from \"../../services/data.json\";\nimport { Link } from \"react-router-dom\";\nimport \"./jobsearch.css\";\n\nconst JobSearch = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [displayResults, setDisplayResults] = useState([]);\n  const [filter, setFilter] = useState({\n    area: [],\n    contract: [],\n    salary: []\n  });\n  const [filterList, setFilterList] = useState({});\n  const [limit, setLimt] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const pageLimit = 10;\n  const salaryList = {\n    \"below £50,000\": [0, 50000],\n    \"£50,000 to 70,000\": [50000, 70000],\n    \"£70,000 to 90,000\": [70000, 90000],\n    \"£90,000 to £125,000\": [90000, 125000],\n    \"above £125,000\": [125000, 1000000]\n  };\n  useEffect(() => {\n    setResults(data);\n    setDisplayResults(data);\n\n    const updateFilters = (field, field2) => {\n      let category = [];\n      data.forEach(cur => {\n        if (typeof cur[field] === \"object\") {\n          category = [...category, ...cur[field][field2]];\n        } else {\n          category = [...category, cur[field]];\n        }\n      });\n      category.sort();\n      let categoryList = {};\n      category.forEach(cur => {\n        if (cur) categoryList[cur] = categoryList[cur] ? categoryList[cur] + 1 : 1;\n      });\n      return categoryList;\n    };\n\n    const area = updateFilters(\"location\", \"area\");\n    delete area.UK;\n    const contract = updateFilters(\"contract_type\");\n    const salary = {};\n    Object.entries(salaryList).forEach(cur => {\n      salary[cur[0]] = 0;\n      data.forEach(el => {\n        if (el.salary_min <= cur[1][1] && el.salary_max > cur[1][0]) salary[cur[0]] += 1;\n      });\n    });\n    setFilterList({\n      area,\n      contract,\n      salary\n    });\n  }, []);\n  useEffect(() => {\n    const current = results.filter(cur => {\n      let area = false || !filter.area.length;\n      filter.area.length && cur.location.area.forEach(cur => {\n        if (filter.area.includes(cur)) area = true;\n      });\n      const contract = !filter.contract.length || filter.contract.includes(cur.contract_type);\n      let salary = false || !filter.salary.length;\n      filter.salary.length && filter.salary.forEach(el => {\n        if (cur.salary_min <= salaryList[el][1] && cur.salary_max > salaryList[el][0]) salary = true;\n      });\n      return area && contract && salary;\n    });\n    results.length && setDisplayResults(current);\n  }, [filter]);\n\n  const handleOnChange = e => {\n    const current = { ...filter\n    };\n    const [name, value] = e.target.id.split(\"-\");\n    if (!current[name]) current[name] = [];\n    const index = current[name].indexOf(value);\n\n    if (index + 1) {\n      current[name].splice(index, 1);\n    } else {\n      current[name].push(value);\n    }\n\n    setFilter(current);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobsearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"banner-header\",\n      children: \"Available jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobsearch__fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job__filter\",\n        children: Object.entries(filterList).map((cur, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter__header\",\n            onClick: () => Object.entries(cur[1]).length > 5 && setLimt(prev => prev !== cur[0] ? cur[0] : \"\"),\n            children: [cur[0], Object.entries(cur[1]).length > 5 && (limit === cur[0] ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter__limit\",\n              children: \"\\u2228\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter__limit\",\n              children: \"\\u2227\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), Object.entries(cur[1]).map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter__fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: `${cur[0]}-${el[0]}`,\n              type: \"checkbox\",\n              className: \"filter__input\",\n              onChange: handleOnChange,\n              value: filter[cur[0]]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `${cur[0]}-${el[0]}`,\n              className: \"filter__label\",\n              children: el[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter__number\",\n              children: [\"(\", el[1], \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)).slice(0, limit === cur[0] ? Object.entries(cur[1]).length - 1 : 5)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job\",\n        children: displayResults.map((cur, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job__title\",\n                children: cur.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job__company\",\n                children: cur.company.display_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job__sallary\",\n              children: [\"\\xA3\", cur.salary_min === cur.salary_max ? cur.salary_max : `${cur.salary_min} - £${cur.salary_max}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job__description\",\n              children: cur.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job__detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job__posted-date\",\n                children: [\"Posted: \", Date(cur.created).split(\"GMT\")[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job__location\",\n                children: [\"Location: \", cur.location.display_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"job__btn btn\",\n                href: cur.redirect_url,\n                children: \"view details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)).slice((page - 1) * pageLimit, page * pageLimit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__btn\",\n        style: page === 1 ? {\n          opacity: 0.5\n        } : null,\n        onClick: () => page > 1 && setPage(prev => prev - 1),\n        children: [\"<<\", \" Previous\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__page-container\",\n        children: [...Array(Math.ceil(displayResults.length / pageLimit))].map((cur, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination__page\",\n          style: i + 1 === page ? {\n            fontWeight: 900,\n            color: \"rgb(245, 81, 81)\"\n          } : null,\n          onClick: () => setPage(i + 1),\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__btn\",\n        style: Math.ceil(displayResults.length / pageLimit) === page ? {\n          opacity: 0.5\n        } : null,\n        onClick: () => page < Math.ceil(displayResults.length / pageLimit) && setPage(prev => prev + 1),\n        children: [\"Next \", \">>\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobSearch, \"liV4B/djI1ZXzry8LL9yax6bAss=\");\n\n_c = JobSearch;\nexport default JobSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSearch\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/logiciel/src/page/jobsearch/jobsearch.jsx"],"names":["React","useEffect","useState","results","data","Link","JobSearch","setResults","displayResults","setDisplayResults","filter","setFilter","area","contract","salary","filterList","setFilterList","limit","setLimt","page","setPage","pageLimit","salaryList","updateFilters","field","field2","category","forEach","cur","sort","categoryList","UK","Object","entries","el","salary_min","salary_max","current","length","location","includes","contract_type","handleOnChange","e","name","value","target","id","split","index","indexOf","splice","push","map","i","prev","slice","title","company","display_name","description","Date","created","redirect_url","opacity","Array","Math","ceil","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { results as data } from \"../../services/data.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./jobsearch.css\";\r\n\r\nconst JobSearch = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [displayResults, setDisplayResults] = useState([]);\r\n  const [filter, setFilter] = useState({ area: [], contract: [], salary: [] });\r\n  const [filterList, setFilterList] = useState({});\r\n  const [limit, setLimt] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const pageLimit = 10;\r\n\r\n  const salaryList = {\r\n    \"below £50,000\": [0, 50000],\r\n    \"£50,000 to 70,000\": [50000, 70000],\r\n    \"£70,000 to 90,000\": [70000, 90000],\r\n    \"£90,000 to £125,000\": [90000, 125000],\r\n    \"above £125,000\": [125000, 1000000],\r\n  };\r\n\r\n  useEffect(() => {\r\n    setResults(data);\r\n    setDisplayResults(data);\r\n    const updateFilters = (field, field2) => {\r\n      let category = [];\r\n      data.forEach((cur) => {\r\n        if (typeof cur[field] === \"object\") {\r\n          category = [...category, ...cur[field][field2]];\r\n        } else {\r\n          category = [...category, cur[field]];\r\n        }\r\n      });\r\n      category.sort();\r\n      let categoryList = {};\r\n      category.forEach((cur) => {\r\n        if (cur)\r\n          categoryList[cur] = categoryList[cur] ? categoryList[cur] + 1 : 1;\r\n      });\r\n      return categoryList;\r\n    };\r\n    const area = updateFilters(\"location\", \"area\");\r\n    delete area.UK;\r\n    const contract = updateFilters(\"contract_type\");\r\n    const salary = {};\r\n    Object.entries(salaryList).forEach((cur) => {\r\n      salary[cur[0]] = 0;\r\n      data.forEach((el) => {\r\n        if (el.salary_min <= cur[1][1] && el.salary_max > cur[1][0])\r\n          salary[cur[0]] += 1;\r\n      });\r\n    });\r\n    setFilterList({ area, contract, salary });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const current = results.filter((cur) => {\r\n      let area = false || !filter.area.length;\r\n      filter.area.length &&\r\n        cur.location.area.forEach((cur) => {\r\n          if (filter.area.includes(cur)) area = true;\r\n        });\r\n      const contract =\r\n        !filter.contract.length || filter.contract.includes(cur.contract_type);\r\n      let salary = false || !filter.salary.length;\r\n      filter.salary.length &&\r\n        filter.salary.forEach((el) => {\r\n          if (\r\n            cur.salary_min <= salaryList[el][1] &&\r\n            cur.salary_max > salaryList[el][0]\r\n          )\r\n            salary = true;\r\n        });\r\n      return area && contract && salary;\r\n    });\r\n    results.length && setDisplayResults(current);\r\n  }, [filter]);\r\n\r\n  const handleOnChange = (e) => {\r\n    const current = { ...filter };\r\n    const [name, value] = e.target.id.split(\"-\");\r\n    if (!current[name]) current[name] = [];\r\n    const index = current[name].indexOf(value);\r\n    if (index + 1) {\r\n      current[name].splice(index, 1);\r\n    } else {\r\n      current[name].push(value);\r\n    }\r\n    setFilter(current);\r\n  };\r\n\r\n  return (\r\n    <div className=\"jobsearch\">\r\n      <h1 className=\"banner-header\">Available jobs</h1>\r\n      <div className=\"jobsearch__fields\">\r\n        <div className=\"job__filter\">\r\n          {Object.entries(filterList).map((cur, i) => (\r\n            <div className=\"filter__container\" key={i}>\r\n              <div\r\n                className=\"filter__header\"\r\n                onClick={() =>\r\n                  Object.entries(cur[1]).length > 5 &&\r\n                  setLimt((prev) => (prev !== cur[0] ? cur[0] : \"\"))\r\n                }\r\n              >\r\n                {cur[0]}\r\n                {Object.entries(cur[1]).length > 5 &&\r\n                  (limit === cur[0] ? (\r\n                    <span className=\"filter__limit\">&or;</span>\r\n                  ) : (\r\n                    <span className=\"filter__limit\">&and;</span>\r\n                  ))}\r\n              </div>\r\n              {Object.entries(cur[1])\r\n                .map((el, i) => (\r\n                  <div className=\"filter__fields\" key={i}>\r\n                    <input\r\n                      id={`${cur[0]}-${el[0]}`}\r\n                      type=\"checkbox\"\r\n                      className=\"filter__input\"\r\n                      onChange={handleOnChange}\r\n                      value={filter[cur[0]]}\r\n                    />\r\n                    <label\r\n                      htmlFor={`${cur[0]}-${el[0]}`}\r\n                      className=\"filter__label\"\r\n                    >\r\n                      {el[0]}\r\n                    </label>\r\n                    <div className=\"filter__number\">({el[1]})</div>\r\n                  </div>\r\n                ))\r\n                .slice(\r\n                  0,\r\n                  limit === cur[0] ? Object.entries(cur[1]).length - 1 : 5\r\n                )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"job\">\r\n          {displayResults\r\n            .map((cur, i) => (\r\n              <div className=\"job__container\" key={i}>\r\n                <div className=\"job__header\">\r\n                  <div className=\"\">\r\n                    <div className=\"job__title\">{cur.title}</div>\r\n                    <div className=\"job__company\">\r\n                      {cur.company.display_name}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"job__sallary\">\r\n                    £\r\n                    {cur.salary_min === cur.salary_max\r\n                      ? cur.salary_max\r\n                      : `${cur.salary_min} - £${cur.salary_max}`}\r\n                  </div>\r\n                </div>\r\n                <div className=\"job__body\">\r\n                  <div className=\"job__description\">{cur.description}</div>\r\n                  <div className=\"job__detail\">\r\n                    <div className=\"job__posted-date\">\r\n                      Posted: {Date(cur.created).split(\"GMT\")[0]}\r\n                    </div>\r\n                    <div className=\"job__location\">\r\n                      Location: {cur.location.display_name}\r\n                    </div>\r\n                    <a className=\"job__btn btn\" href={cur.redirect_url}>\r\n                      view details\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n            .slice((page - 1) * pageLimit, page * pageLimit)}\r\n        </div>\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <div\r\n          className=\"pagination__btn\"\r\n          style={page === 1 ? { opacity: 0.5 } : null}\r\n          onClick={() => page > 1 && setPage((prev) => prev - 1)}\r\n        >\r\n          {\"<<\"} Previous\r\n        </div>\r\n        <div className=\"pagination__page-container\">\r\n          {[...Array(Math.ceil(displayResults.length / pageLimit))].map(\r\n            (cur, i) => (\r\n              <div\r\n                className=\"pagination__page\"\r\n                style={\r\n                  i + 1 === page\r\n                    ? { fontWeight: 900, color: \"rgb(245, 81, 81)\" }\r\n                    : null\r\n                }\r\n                onClick={() => setPage(i + 1)}\r\n              >\r\n                {i + 1}\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"pagination__btn\"\r\n          style={\r\n            Math.ceil(displayResults.length / pageLimit) === page\r\n              ? { opacity: 0.5 }\r\n              : null\r\n          }\r\n          onClick={() =>\r\n            page < Math.ceil(displayResults.length / pageLimit) &&\r\n            setPage((prev) => prev + 1)\r\n          }\r\n        >\r\n          Next {\">>\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobSearch;\r\n"]},"metadata":{},"sourceType":"module"}